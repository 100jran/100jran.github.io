<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://100jran.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://100jran.github.io/" rel="alternate" type="text/html" /><updated>2021-07-19T21:48:35+09:00</updated><id>https://100jran.github.io/</id><title type="html">100’Log</title><entry><title type="html">Ch8-18. 연결된 예외</title><link href="https://100jran.github.io/8cornerstoneJava7" rel="alternate" type="text/html" title="Ch8-18. 연결된 예외" /><published>2021-06-16T09:00:06+09:00</published><updated>2021-06-16T09:00:06+09:00</updated><id>https://100jran.github.io/8cornerstoneJava7</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava7">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---18-연결된-예외chained-exception&quot;&gt;Ch8 - 18. &lt;a href=&quot;#Verse 1&quot;&gt;연결된 예외(chained exception)&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---18-연결된-예외chained-exception-1&quot;&gt;Ch8 - 18. 연결된 예외(chained exception)&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-연결된-예외chained-exception란&quot;&gt;▶ 연결된 예외(chained exception)란?&lt;/h3&gt;
&lt;h6 id=&quot;-한-예외가-다른-예외를-발생시킬-수-있음&quot;&gt;▷ 한 예외가 다른 예외를 발생시킬 수 있음&lt;/h6&gt;
&lt;h6 id=&quot;-예외a가-예외b를-발생-시키면-a는-b의-원인-예외cause-exception&quot;&gt;▷ 예외A가 예외B를 발생 시키면, A는 B의 원인 예외(cause exception)&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initCause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;예외&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 지정한 예외를 원인 예외로 등록&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getCause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 원인 예외를 반환&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;-throwable&quot;&gt;▶ Throwable?&lt;/h3&gt;
&lt;h6 id=&quot;-throwable은-exception이라-생각하고-사용&quot;&gt;▷ Throwable은 Exception이라 생각하고 사용&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava7/img.png&quot; width=&quot;80%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serializable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cause&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 객체 자신(this)을 원인 예외로 등록&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initCouse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cause&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cause&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cause를 원인 예외로 등록 &lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;-예시&quot;&gt;▶ 예시&lt;/h3&gt;
&lt;h6 id=&quot;-원인-예외-때문에-만들어진-연결된-예외&quot;&gt;▷ 원인 예외 때문에 만들어진 연결된 예외&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava7/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-연결된-예외를-사용하는-이유&quot;&gt;▶ 연결된 예외를 사용하는 이유?&lt;/h3&gt;
&lt;h6 id=&quot;-여러-예외를-하나로-묶어-다루기-위해&quot;&gt;▷ 여러 예외를 하나로 묶어 다루기 위해&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava7/img_2.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h6 id=&quot;-checked예외를-unchecked예외로-변경-할-때&quot;&gt;▷ checked예외를 unchecked예외로 변경 할 때&lt;/h6&gt;
&lt;h6 id=&quot;-즉-필수-처리를-선택-처리로-변경할-때&quot;&gt;▷ 즉 필수 처리를 선택 처리로 변경할 때&lt;/h6&gt;
&lt;h6 id=&quot;-보통-예외-선언을-하는-건-checked예외--exception자손--예외-필수-처리&quot;&gt;▷ 보통 예외 선언을 하는 건 checked예외 = Exception자손 = 예외 필수 처리&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;checked예외일 때&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava7/img_3.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;unchecked예외일 때&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava7/img_4.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;연결된-예외--겉으로-봤을-땐-unchecked예외인-것-처럼-보이게-함&quot;&gt;연결된 예외 → 겉으로 봤을 땐 unchecked예외인 것 처럼 보이게 함&lt;/h3&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch8-15~17. 사용자 정의 예외</title><link href="https://100jran.github.io/8cornerstoneJava6" rel="alternate" type="text/html" title="Ch8-15~17. 사용자 정의 예외" /><published>2021-06-16T09:00:05+09:00</published><updated>2021-06-16T09:00:05+09:00</updated><id>https://100jran.github.io/8cornerstoneJava6</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava6">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---15-사용자-정의-예외-만들기&quot;&gt;Ch8 - 15. &lt;a href=&quot;#Verse 1&quot;&gt;사용자 정의 예외 만들기&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---16-사용자-정의-예외-만들기-예제&quot;&gt;Ch8 - 16. &lt;a href=&quot;#Verse 2&quot;&gt;사용자 정의 예외 만들기 예제&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---17-예외-되던지기exception-re-throwing&quot;&gt;Ch8 - 17. &lt;a href=&quot;#Verse 3&quot;&gt;예외 되던지기(exception re-throwing)&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch8---15-사용자-정의-예외-만들기-1&quot;&gt;Ch8 - 15. 사용자 정의 예외 만들기&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-사용자-정의-예외란&quot;&gt;▶ 사용자 정의 예외란?&lt;/h3&gt;
&lt;h6 id=&quot;-직접-예외-클래스를-정의하는-것--상속을-이용하여&quot;&gt;▷ 직접 예외 클래스를 정의하는 것 → 상속을 이용하여&lt;/h6&gt;
&lt;h6 id=&quot;-조상은-exception과-runtimeexception-중에서-선택&quot;&gt;▷ &lt;a href=&quot;https://100jran.github.io/8cornerstoneJava1#Verse 3&quot;&gt;조상은 Exception과 RuntimeException 중에서 선택&lt;/a&gt;&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Exception 클래스 + 자손들&lt;/strong&gt;&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;사용자&lt;/strong&gt;가 발생시키는 예외&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;checked&lt;/strong&gt; 예외 : 예외 처리 &lt;strong&gt;필수&lt;/strong&gt; → &lt;strong&gt;try-catch문&lt;/strong&gt; 필수&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;RuntimeException 클래스 + 자손들&lt;/strong&gt;&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;프로그래머가&lt;/strong&gt; 발생시키는 예외&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;unchecked&lt;/strong&gt; 예외 : 예외 처리 &lt;strong&gt;선택&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch8---16-사용자-정의-예외-만들기-예제-1&quot;&gt;Ch8 - 16. 사용자 정의 예외 만들기 예제&lt;/h2&gt;
&lt;hr /&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyException&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Exception이 조상 : 필수 처리 → try-catch문 필수&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;MyException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 문자열을 매개변수로 받는 생성자&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 조상 Exception의 생성자 호출&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch8---17-예외-되던지기exception-re-throwing-1&quot;&gt;Ch8 - 17. 예외 되던지기(exception re-throwing)&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-예외-되던지기exception-re-throwing란&quot;&gt;▶ 예외 되던지기(exception re-throwing)란?&lt;/h3&gt;
&lt;h6 id=&quot;-예외를-처리한-후-다시-예외를-발생&quot;&gt;▷ 예외를 처리한 후 다시 예외를 발생&lt;/h6&gt;
&lt;h6 id=&quot;-호출한-메서드와-호출-된-메서드-양쪽에서-예외-처리--예외-분담-처리&quot;&gt;▷ 호출한 메서드와 호출 된 메서드 양쪽에서 예외 처리 : 예외 분담 처리&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava6/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava6/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch8-11~14. 메서드 예외</title><link href="https://100jran.github.io/8cornerstoneJava5" rel="alternate" type="text/html" title="Ch8-11~14. 메서드 예외" /><published>2021-06-16T09:00:04+09:00</published><updated>2021-06-16T09:00:04+09:00</updated><id>https://100jran.github.io/8cornerstoneJava5</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava5">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---11-메서드에-예외-선언하기&quot;&gt;Ch8 - 11. &lt;a href=&quot;#Verse 1&quot;&gt;메서드에 예외 선언하기&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---12-메서드에-예외-선언하기-예제1&quot;&gt;Ch8 - 12. &lt;a href=&quot;#Verse 2&quot;&gt;메서드에 예외 선언하기 예제1&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---13-메서드에-예외-선언하기-예제2&quot;&gt;Ch8 - 13. &lt;a href=&quot;#Verse 3&quot;&gt;메서드에 예외 선언하기 예제2&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---14-finally블럭&quot;&gt;Ch8 - 14. &lt;a href=&quot;#Verse 4&quot;&gt;finally블럭&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---11-메서드에-예외-선언하기-1&quot;&gt;Ch8 - 11. 메서드에 예외 선언하기&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-예외를-처리하는-방법-3가지&quot;&gt;▶ 예외를 처리하는 방법 3가지&lt;/h3&gt;
&lt;h6 id=&quot;-try-catch문--예외-직접-처리&quot;&gt;▷ try-catch문 : 예외 직접 처리&lt;/h6&gt;
&lt;h6 id=&quot;-예외-선언--사실상-예외-처리x-예외를-호출한-쪽에-예외-떠넘기기알리기&quot;&gt;▷ 예외 선언 : 사실상 예외 처리X, 예외를 호출한 쪽에 예외 떠넘기기/알리기&lt;/h6&gt;
&lt;h6 id=&quot;-은폐--조용히-덮기-try-catch문에서-catch문에-아무것도-넣지-않음&quot;&gt;▷ 은폐 : 조용히 덮기, try-catch문에서 catch문에 아무것도 넣지 않음&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;-예외-처리-방법-3가지-中-예외-선언&quot;&gt;▶ 예외 처리 방법 3가지 中 예외 선언&lt;/h3&gt;
&lt;h6 id=&quot;-throw--vs--throws&quot;&gt;▷ &lt;em&gt;throw&lt;/em&gt;  vs  &lt;em&gt;throws&lt;/em&gt;&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;예외를 &lt;strong&gt;발생&lt;/strong&gt;시키는 키워드 &lt;strong&gt;throw&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;예외를 &lt;strong&gt;선언&lt;/strong&gt;하는 키워드 &lt;strong&gt;throws&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava5/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava5/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-java-api&quot;&gt;▶ JAVA API&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava5/img_2.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---12-메서드에-예외-선언하기-예제1-1&quot;&gt;Ch8 - 12. 메서드에 예외 선언하기 예제1&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-try-catch문이-어디에도-없을-때---예외-처리x&quot;&gt;▶ try-catch문이 어디에도 없을 때 - 예외 처리X&lt;/h3&gt;
&lt;h6 id=&quot;-예외를-떠넘기다-떠넘기다-처리를-하지-못해서&quot;&gt;▷ 예외를 떠넘기다 떠넘기다 처리를 하지 못해서&lt;/h6&gt;
&lt;h6 id=&quot;-main에서-jvm까지-예외가-떠넘겨짐&quot;&gt;▷ main에서 JVM까지 예외가 떠넘겨짐&lt;/h6&gt;
&lt;h6 id=&quot;-jvm에서는-예외-발생-당시의-호출-스택을-보여줌&quot;&gt;▷ JVM에서는 예외 발생 당시의 호출 스택을 보여줌&lt;/h6&gt;
&lt;h6 id=&quot;-jvm에서-예외-처리가-된-건-아님&quot;&gt;▷ JVM에서 예외 처리가 된 건 아님&lt;/h6&gt;
&lt;h6 id=&quot;-폭탄-돌리기하다가----jvm까지-간-것-뿐&quot;&gt;▷ 폭탄 돌리기하다가 → … → JVM까지 간 것 뿐&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava5/img_3.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---13-메서드에-예외-선언하기-예제2-1&quot;&gt;Ch8 - 13. 메서드에 예외 선언하기 예제2&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-try-catch문이-main에-있을-때---예외-처리o&quot;&gt;▶ try-catch문이 main에 있을 때 - 예외 처리O&lt;/h3&gt;
&lt;h6 id=&quot;-예외-선언으로-인해-main으로-돌아왔는데&quot;&gt;▷ 예외 선언으로 인해 main으로 돌아왔는데&lt;/h6&gt;
&lt;h6 id=&quot;-try-catch문-有&quot;&gt;▷ try-catch문 有&lt;/h6&gt;
&lt;h6 id=&quot;-예외-해결&quot;&gt;▷ 예외 해결&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava5/img_4.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 4&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---14-finally블럭-1&quot;&gt;Ch8 - 14. finally블럭&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-finally블럭이란&quot;&gt;▶ finally블럭이란?&lt;/h3&gt;
&lt;h6 id=&quot;-예외-발생여부와-관계없이-수행되어야-하는-코드를-넣음&quot;&gt;▷ 예외 발생여부와 관계없이 수행되어야 하는 코드를 넣음&lt;/h6&gt;
&lt;h6 id=&quot;-try-catch문의-맨-마지막에-위치해야-함&quot;&gt;▷ try-catch문의 맨 마지막에 위치해야 함&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 예외 발생 가능성 있는 문장&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 예외 처리 문장&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 에러 발생 여부 관계X → 수행되어야 하는 문장&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava5/img_5.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch8-9~10. 예외 발생시키기</title><link href="https://100jran.github.io/8cornerstoneJava4" rel="alternate" type="text/html" title="Ch8-9~10. 예외 발생시키기" /><published>2021-06-16T09:00:03+09:00</published><updated>2021-06-16T09:00:03+09:00</updated><id>https://100jran.github.io/8cornerstoneJava4</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava4">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---9-예외-발생시키기&quot;&gt;Ch8 - 9. &lt;a href=&quot;#Verse 1&quot;&gt;예외 발생시키기&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---10-checked예외-unchecked예외&quot;&gt;Ch8 - 10. &lt;a href=&quot;#Verse 2&quot;&gt;checked예외, unchecked예외&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---9-예외-발생시키기-1&quot;&gt;Ch8 - 9. 예외 발생시키기&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-예외를-발생시키는-방법&quot;&gt;▶ 예외를 발생시키는 방법&lt;/h3&gt;
&lt;h6 id=&quot;-연산자-new를-이용하여-발생시키려는-예외-클래스의-객체-생성&quot;&gt;▷ 연산자 new를 이용하여 발생시키려는 예외 클래스의 객체 생성&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Exception e = new Exception(&quot;고의적 예외 발생&quot;);&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&quot;-키워드-throw를-이용하여-예외-발생&quot;&gt;▷ 키워드 throw를 이용하여 예외 발생&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw e;&lt;/code&gt;&lt;/p&gt;
&lt;h6 id=&quot;-예외-객체-생성--throw-한-번에-하는-방법&quot;&gt;▷ 예외 객체 생성 + throw 한 번에 하는 방법&lt;/h6&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;throw new Exception(&quot;고의적 예외 발생&quot;);&lt;/code&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava4/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---10-checked예외-unchecked예외-1&quot;&gt;Ch8 - 10. checked예외, unchecked예외&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava4/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-checked예외란&quot;&gt;▶ checked예외란?&lt;/h3&gt;
&lt;h6 id=&quot;-컴파일러가-예외-처리-여부를-체크&quot;&gt;▷ 컴파일러가 예외 처리 여부를 체크&lt;/h6&gt;
&lt;h6 id=&quot;-예외-처리-필수&quot;&gt;▷ 예외 처리 필수&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava4/img_2.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;-unchecked예외&quot;&gt;▶ unchecked예외&lt;/h3&gt;
&lt;h6 id=&quot;-컴파일러가-예외-처리-여부를-체크x&quot;&gt;▷ 컴파일러가 예외 처리 여부를 체크X&lt;/h6&gt;
&lt;h6 id=&quot;-예외-처리-선택&quot;&gt;▷ 예외 처리 선택&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava4/img_3.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h6 id=&quot;-try-catch문으로-해결&quot;&gt;▷ try-catch문으로 해결&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Ex8_8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;에러 해결&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// console&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;에러&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;해결&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch8-7~8. 멀티 catch블럭</title><link href="https://100jran.github.io/8cornerstoneJava3" rel="alternate" type="text/html" title="Ch8-7~8. 멀티 catch블럭" /><published>2021-06-16T09:00:02+09:00</published><updated>2021-06-16T09:00:02+09:00</updated><id>https://100jran.github.io/8cornerstoneJava3</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava3">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---7-printstacktrace와-getmessage&quot;&gt;Ch8 - 7. &lt;a href=&quot;#Verse 1&quot;&gt;printStackTrace()와 getMessage()&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---8-멀티-catch블럭&quot;&gt;Ch8 - 8. &lt;a href=&quot;#Verse 2&quot;&gt;멀티 catch블럭&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch8---7-printstacktrace와-getmessage-1&quot;&gt;Ch8 - 7. printStackTrace()와 getMessage()&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava3/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Ex8_5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;			
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 예외발생!!!&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 실행X&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ArithmeticException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ae&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ae&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;예외메시지 : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ae&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// try-catch의 끝&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// main메서드의 끝&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// console&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ArithmeticException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ex8_5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ex8_5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;예외메시지&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;-printstacktrace-메서드란&quot;&gt;▶ printStackTrace() 메서드란?&lt;/h3&gt;
&lt;h6 id=&quot;-예외-발생-시-호출-스택에-있는-메서드의-정보와-예외-메세지를-화면에-출력&quot;&gt;▷ 예외 발생 시, 호출 스택에 있는 메서드의 정보와 예외 메세지를 화면에 출력&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ArithmeticException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ex8_5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ex8_5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;-getmessage-메서드란&quot;&gt;▶ getMessage() 메서드란?&lt;/h3&gt;
&lt;h6 id=&quot;-발생한-예외-클래스의-인스턴스에-저장된-메세지를-get&quot;&gt;▷ 발생한 예외 클래스의 인스턴스에 저장된 메세지를 get&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zero&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch8---8-멀티-catch블럭-1&quot;&gt;Ch8 - 8. 멀티 catch블럭&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-멀티-catch블럭이란&quot;&gt;▶ 멀티 catch블럭이란?&lt;/h3&gt;
&lt;h6 id=&quot;-내용이-같은-catch블럭을-하나로-합친-것&quot;&gt;▷ 내용이 같은 catch블럭을 하나로 합친 것&lt;/h6&gt;
&lt;h6 id=&quot;-jdk17부터&quot;&gt;▷ JDK1.7부터&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava3/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-주의&quot;&gt;▶ 주의&lt;/h3&gt;
&lt;h6 id=&quot;-부모-자식-관계는-멀티-catch블럭-사용--에러&quot;&gt;▷ 부모 자식 관계는 멀티 catch블럭 사용 → 에러&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;부모-자식 멀티 catch블럭 = ERROR&lt;/strong&gt;&lt;br /&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExceptionA&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExceptionB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExceptionA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExceptionB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ERROR!&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;부모만 catch블럭 = OK&lt;/strong&gt;&lt;br /&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ExceptionA&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExceptionB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; 
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExceptionA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// OK&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;-멀티-catch블럭에서-공통-멤버만-사용가능&quot;&gt;▷ 멀티 catch블럭에서 공통 멤버만 사용가능&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava3/img_2.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch8-4~6. 예외 처리</title><link href="https://100jran.github.io/8cornerstoneJava2" rel="alternate" type="text/html" title="Ch8-4~6. 예외 처리" /><published>2021-06-16T09:00:01+09:00</published><updated>2021-06-16T09:00:01+09:00</updated><id>https://100jran.github.io/8cornerstoneJava2</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava2">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---4-예외-처리하기--try-catch문&quot;&gt;Ch8 - 4. &lt;a href=&quot;#Verse 1&quot;&gt;예외 처리하기 : try-catch문&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---5-try-catch문에서의-흐름&quot;&gt;Ch8 - 5. &lt;a href=&quot;#Verse 2&quot;&gt;try-catch문에서의 흐름&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---6-예외의-발생과-catch블럭&quot;&gt;Ch8 - 6. &lt;a href=&quot;#Verse 3&quot;&gt;예외의 발생과 catch블럭&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---4-예외-처리하기--try-catch문-1&quot;&gt;Ch8 - 4. 예외 처리하기 : try-catch문&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-try-catch문이란&quot;&gt;▶ try-catch문이란?&lt;/h3&gt;
&lt;h6 id=&quot;-예외를-처리하기-위해-만들어-놓은-구문&quot;&gt;▷ 예외를 처리하기 위해 만들어 놓은 구문&lt;/h6&gt;
&lt;h6 id=&quot;--생략-불가&quot;&gt;▷ {} 생략 불가&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 예외 발생 가능성이 있는 문장 작성&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Exception1 발생했을 경우, 처리 문장 작성  &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Exception2 발생했을 경우, 처리 문장 작성  &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Exception3 발생했을 경우, 처리 문장 작성  &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---5-try-catch문에서의-흐름-1&quot;&gt;Ch8 - 5. try-catch문에서의 흐름&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-try블럭-내에서-예외가-발생한-경우&quot;&gt;▶ try블럭 내에서 예외가 발생한 경우&lt;/h3&gt;
&lt;h6 id=&quot;-발생한-예외가-일치하는-catch블럭이-있는지-확인&quot;&gt;▷ 발생한 예외가 일치하는 catch블럭이 있는지 확인&lt;/h6&gt;
&lt;h6 id=&quot;-일치하는-catch블럭-찾음&quot;&gt;▷ 일치하는 catch블럭 찾음&lt;/h6&gt;
&lt;p&gt;→ &lt;strong&gt;해당 catch블럭&lt;/strong&gt; 내의 문장을 &lt;strong&gt;수행&lt;/strong&gt;&lt;br /&gt;
→ 전체 &lt;strong&gt;try-catch문을 빠져나감&lt;/strong&gt;&lt;br /&gt;
→ &lt;strong&gt;다음 문장 계속적 수행&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h6 id=&quot;-일치하는-catch블럭-못-찾음&quot;&gt;▷ 일치하는 catch블럭 못 찾음&lt;/h6&gt;
&lt;p&gt;→ &lt;strong&gt;예외 처리 불가&lt;/strong&gt;&lt;br /&gt;
→ &lt;strong&gt;프로그램 종료&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava2/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-try블럭-내에서-예외가-발생하지-않은-경우&quot;&gt;▶ try블럭 내에서 예외가 발생하지 않은 경우&lt;/h3&gt;
&lt;h6 id=&quot;-catch블럭을-거치지-않고&quot;&gt;▷ catch블럭을 거치지 않고&lt;/h6&gt;
&lt;h6 id=&quot;-전체-try-catch문을-빠져나가&quot;&gt;▷ 전체 try-catch문을 빠져나가&lt;/h6&gt;
&lt;h6 id=&quot;-계속적-수행&quot;&gt;▷ 계속적 수행&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava2/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---6-예외의-발생과-catch블럭-1&quot;&gt;Ch8 - 6. 예외의 발생과 catch블럭&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-다양한-예외-발생&quot;&gt;▶ 다양한 예외 발생&lt;/h3&gt;
&lt;h6 id=&quot;-arithmeticexception&quot;&gt;▷ ArithmeticException&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava2/img_2.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h6 id=&quot;-exception&quot;&gt;▷ Exception&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava2/img_3.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h6 id=&quot;-indexoutofboundsexception&quot;&gt;▷ IndexOutOfBoundsException&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava2/img_4.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch8-1~3. 프로그램 오류</title><link href="https://100jran.github.io/8cornerstoneJava1" rel="alternate" type="text/html" title="Ch8-1~3. 프로그램 오류" /><published>2021-06-16T09:00:00+09:00</published><updated>2021-06-16T09:00:00+09:00</updated><id>https://100jran.github.io/8cornerstoneJava1</id><content type="html" xml:base="https://100jran.github.io/8cornerstoneJava1">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter8-예외처리&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter8. 예외처리&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch8---1-프로그램-오류&quot;&gt;Ch8 - 1. &lt;a href=&quot;#Verse 1&quot;&gt;프로그램 오류&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---2-예외-클래스의-계층구조&quot;&gt;Ch8 - 2. &lt;a href=&quot;#Verse 2&quot;&gt;예외 클래스의 계층구조&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch8---3-exception과-runtimeexception&quot;&gt;Ch8 - 3. &lt;a href=&quot;#Verse 3&quot;&gt;Exception과 RuntimeException&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---1-프로그램-오류-1&quot;&gt;Ch8 - 1. 프로그램 오류&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-프로그램-오류의-종류-3가지&quot;&gt;▶ 프로그램 오류의 종류 3가지&lt;/h3&gt;
&lt;h6 id=&quot;-컴파일-에러compile-time-error--컴파일-할-때-발생하는-에러&quot;&gt;▷ 컴파일 에러(compile-time error) : 컴파일 할 때 발생하는 에러&lt;/h6&gt;
&lt;h6 id=&quot;-런타임-에러runtime-error--실행-할-때-발생하는-에러&quot;&gt;▷ 런타임 에러(runtime error) : 실행 할 때 발생하는 에러&lt;/h6&gt;
&lt;h6 id=&quot;-논리적-에러logical-error--작성-의도와-다르게-동작하는-에러&quot;&gt;▷ 논리적 에러(logical error) : 작성 의도와 다르게 동작하는 에러&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-컴파일-에러compile-time-error--컴파일-할-때-발생하는-에러-1&quot;&gt;▶ 컴파일 에러(compile-time error) : 컴파일 할 때 발생하는 에러&lt;/h3&gt;
&lt;h6 id=&quot;-컴파일러가-하는-일&quot;&gt;▷ 컴파일러가 하는 일&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;구문체크&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;번역&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;최적화 : 간단한 계산식 계산&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;생략된 코드 추가&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava1/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava1/img_1.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-런타임-에러runtime-error--실행-할-때-발생하는-에러-1&quot;&gt;▶ 런타임 에러(runtime error) : 실행 할 때 발생하는 에러&lt;/h3&gt;
&lt;h6 id=&quot;-컴파일-시-모든-에러를-다-잡아주지-않음&quot;&gt;▷ 컴파일 시 모든 에러를 다 잡아주지 않음&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava1/img_2.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava1/img_3.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h6 id=&quot;-에러error--심각한-오류&quot;&gt;▷ 에러(error) : 심각한 오류&lt;/h6&gt;
&lt;h6 id=&quot;-예외exception--다소-미약한-오류&quot;&gt;▷ 예외(exception) : 다소 미약한 오류&lt;/h6&gt;
&lt;h3 id=&quot;에러는-어쩔-수-없지만-예외는-처리하자&quot;&gt;에러는 어쩔 수 없지만, 예외는 처리하자!&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h6 id=&quot;-예외처리exception-handling의-정의&quot;&gt;▷ 예외처리(exception handling)의 정의&lt;/h6&gt;
&lt;p&gt;: 프로그램 실행 시 발생할 수 있는 &lt;strong&gt;예외의 발생에 대비한 코드 작성&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h6 id=&quot;-예외처리exception-handling의-목적&quot;&gt;▷ 예외처리(exception handling)의 목적&lt;/h6&gt;
&lt;p&gt;: 프로그램의 비정상 종료를 막고, &lt;strong&gt;정상적인 실행 상태를 유지&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-논리적-에러logical-error--작성-의도와-다르게-동작하는-에러-1&quot;&gt;▶ 논리적 에러(logical error) : 작성 의도와 다르게 동작하는 에러&lt;/h3&gt;
&lt;h6 id=&quot;-컴파일-에러--실행이-안됨&quot;&gt;▷ 컴파일 에러 = 실행이 안됨&lt;/h6&gt;
&lt;h6 id=&quot;-런타임-에러--실행이-다-되지-않고-프로그램-종료&quot;&gt;▷ 런타임 에러 = 실행이 다 되지 않고 프로그램 종료&lt;/h6&gt;
&lt;h6 id=&quot;-논리적-에러--프로그램이-다-실행-됨-그러나-생각했던-대로-실행이-안됨&quot;&gt;▷ 논리적 에러 = 프로그램이 다 실행 됨 그러나 생각했던 대로 실행이 안됨&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;예를 들어, 게임을 하다가 폭탄이 날아오면 터져야 함&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;하지만 폭탄이 터지지 않는 경우 = 논리적 에러&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---2-예외-클래스의-계층구조-1&quot;&gt;Ch8 - 2. 예외 클래스의 계층구조&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-상속계층도&quot;&gt;▶ 상속계층도&lt;/h3&gt;
&lt;h6 id=&quot;-미약한-오류와-심각한-오류&quot;&gt;▷ 미약한 오류와 심각한 오류&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava1/img_4.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch8---3-exception과-runtimeexception-1&quot;&gt;Ch8 - 3. Exception과 RuntimeException&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-exception-클래스--자손들&quot;&gt;▶ Exception 클래스 + 자손들&lt;/h3&gt;
&lt;h6 id=&quot;-사용자의-실수와-같은-외적-요인에-의해-발생하는-예외&quot;&gt;▷ 사용자의 실수와 같은 외적 요인에 의해 발생하는 예외&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;-runtimeexception-클래스--자손들&quot;&gt;▶ RuntimeException 클래스 + 자손들&lt;/h3&gt;
&lt;h6 id=&quot;-프로그래머의-실수로-발생하는-예외&quot;&gt;▷ 프로그래머의 실수로 발생하는 예외&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-16-8cornerstoneJava1/img_5.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch7-51~52. 익명 클래스</title><link href="https://100jran.github.io/7cornerstoneJava24" rel="alternate" type="text/html" title="Ch7-51~52. 익명 클래스" /><published>2021-06-15T09:00:23+09:00</published><updated>2021-06-15T09:00:23+09:00</updated><id>https://100jran.github.io/7cornerstoneJava24</id><content type="html" xml:base="https://100jran.github.io/7cornerstoneJava24">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter7-객체지향-프로그래밍ⅱ&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter7. 객체지향 프로그래밍Ⅱ&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch7---51-익명-클래스&quot;&gt;Ch7 - 51. &lt;a href=&quot;#Verse 1&quot;&gt;익명 클래스&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---52-익명-클래스-예제&quot;&gt;Ch7 - 52. &lt;a href=&quot;#Verse 2&quot;&gt;익명 클래스 예제&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch7---51-익명-클래스-1&quot;&gt;Ch7 - 51. 익명 클래스&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-익명-클래스anonymous-class란&quot;&gt;▶ 익명 클래스(anonymous class)란?&lt;/h3&gt;
&lt;h6 id=&quot;-이름이-없는-일회용-클래스&quot;&gt;▷ 이름이 없는 일회용 클래스&lt;/h6&gt;
&lt;h6 id=&quot;-정의와-생성을-동시에&quot;&gt;▷ 정의와 생성을 동시에&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 클래스 정의&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 객체 생성&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그런데 이름이 없다면?&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 클래스 정의&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 객체 생성&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;조상의 이름&lt;/strong&gt;을 대신 적어 줌&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 정의 + 생성&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 멤버 선언&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;-익명-클래스anonymous-class의-선언-방법&quot;&gt;▶ 익명 클래스(anonymous class)의 선언 방법&lt;/h3&gt;
&lt;h6 id=&quot;-방법1--조상-클래스-이름-빌리기&quot;&gt;▷ 방법1 : 조상 클래스 이름 빌리기&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조상&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;클래스&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이름&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 멤버 선언&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;-방법2--구현-인터페이스-이름-빌리기&quot;&gt;▷ 방법2 : 구현 인터페이스 이름 빌리기&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;구현&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;인터페이스&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이름&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 멤버 선언&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch7---52-익명-클래스-예제-1&quot;&gt;Ch7 - 52. 익명 클래스 예제&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-awjjava의-윈도우-프로그래밍-코드를-익명-클래스로-변경&quot;&gt;▶ AWJ(java의 윈도우 프로그래밍) 코드를 익명 클래스로 변경&lt;/h3&gt;
&lt;h6 id=&quot;-eventhandler는-일회성-클래스&quot;&gt;▷ EventHandler는 일회성 클래스&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Start&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addActionListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 객체 생성&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EventHandler&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 클래스 정의&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;actionPerformed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ActionEvent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ActionEvent coourred!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;-익명-클래스로-줄여주기&quot;&gt;▷ 익명 클래스로 줄여주기&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-15-7cornerstoneJava24/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch7-45~50. 내부 클래스</title><link href="https://100jran.github.io/7cornerstoneJava23" rel="alternate" type="text/html" title="Ch7-45~50. 내부 클래스" /><published>2021-06-15T09:00:22+09:00</published><updated>2021-06-15T09:00:22+09:00</updated><id>https://100jran.github.io/7cornerstoneJava23</id><content type="html" xml:base="https://100jran.github.io/7cornerstoneJava23">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter7-객체지향-프로그래밍ⅱ&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter7. 객체지향 프로그래밍Ⅱ&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch7---45-내부-클래스의-제어자와-접근성&quot;&gt;Ch7 - 45. &lt;a href=&quot;#Verse 1&quot;&gt;내부 클래스의 제어자와 접근성&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---46-내부-클래스의-제어자와-접근성-예제1&quot;&gt;Ch7 - 46. &lt;a href=&quot;#Verse 2&quot;&gt;내부 클래스의 제어자와 접근성 예제1&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---47-내부-클래스의-제어자와-접근성-예제2&quot;&gt;Ch7 - 47. &lt;a href=&quot;#Verse 3&quot;&gt;내부 클래스의 제어자와 접근성 예제2&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---48-내부-클래스의-제어자와-접근성-예제3&quot;&gt;Ch7 - 48. &lt;a href=&quot;#Verse 4&quot;&gt;내부 클래스의 제어자와 접근성 예제3&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---49-내부-클래스의-제어자와-접근성-예제4&quot;&gt;Ch7 - 49. &lt;a href=&quot;#Verse 5&quot;&gt;내부 클래스의 제어자와 접근성 예제4&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---50-내부-클래스의-제어자와-접근성-예제5&quot;&gt;Ch7 - 50. &lt;a href=&quot;#Verse 6&quot;&gt;내부 클래스의 제어자와 접근성 예제5&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch7---45-내부-클래스의-제어자와-접근성-1&quot;&gt;Ch7 - 45. 내부 클래스의 제어자와 접근성&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-클래스-앞-제어자&quot;&gt;▶ 클래스 앞 제어자&lt;/h3&gt;
&lt;h6 id=&quot;-일반적-클래스-앞-제어자--default-public-2개만-가능&quot;&gt;▷ 일반적 클래스 앞 제어자 : &lt;code class=&quot;highlighter-rouge&quot;&gt;(default), public&lt;/code&gt; 2개만 가능&lt;/h6&gt;
&lt;h6 id=&quot;-내부-클래스-앞-제어자--default-public-private-protected-4개-다-가능&quot;&gt;▷ 내부 클래스 앞 제어자 : &lt;code class=&quot;highlighter-rouge&quot;&gt;(default), public, private, protected&lt;/code&gt; 4개 다 가능&lt;/h6&gt;
&lt;h6 id=&quot;-내부-클래스--변수&quot;&gt;▷ 내부 클래스 ≒ 변수&lt;/h6&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch7---46-내부-클래스의-제어자와-접근성-예제1-1&quot;&gt;Ch7 - 46. 내부 클래스의 제어자와 접근성 예제1&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-static-멤버를-가질-수-있는-건-static-클래스-뿐&quot;&gt;▶ static 멤버를 가질 수 있는 건 static 클래스 뿐!&lt;/h3&gt;
&lt;h6 id=&quot;-staitc-멤버는-객체-생성없이-사용-가능한-것&quot;&gt;▷ staitc 멤버는 객체 생성없이 사용 가능한 것&lt;/h6&gt;
&lt;h6 id=&quot;-static-클래스는-객체-생성-안해도-됨&quot;&gt;▷ static 클래스는 객체 생성 안해도 됨&lt;/h6&gt;
&lt;h6 id=&quot;-iv--cv-사용-가능&quot;&gt;▷ iv → cv 사용 가능&lt;/h6&gt;
&lt;h6 id=&quot;-iv--cv-사용-불가&quot;&gt;▷ iv ← cv 사용 불가&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ERROR! 인스턴스에서 static변수 → 선언 불가!&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// final static = 상수 → 선언 가능&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// static에서 static변수 → 선언 가능&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ERROR! Local에서 static변수 → 선언 불가!&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// final static = 상수 → 선언 가능&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;-final-static은-상수-변수x--static-클래스-아니어도-사용-가능&quot;&gt;▷ final static은 상수, 변수X → static 클래스 아니어도 사용 가능&lt;/h6&gt;
&lt;h6 id=&quot;-final-static-상수는-객체-생성-없이-바로-호출도-가능&quot;&gt;▷ final static 상수는 객체 생성 없이 바로 호출도 가능&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.println(InstanceInner.CONST);&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.println(StaticInner.cv);&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.println(LocalInner.cv);&lt;/code&gt;&lt;/del&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;지역 내부 클래스&lt;/strong&gt;는 &lt;strong&gt;method 안에서만&lt;/strong&gt; 사용 가능!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch7---47-내부-클래스의-제어자와-접근성-예제2-1&quot;&gt;Ch7 - 47. 내부 클래스의 제어자와 접근성 예제2&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-static-메서드에서-instance-직접-사용-불가&quot;&gt;▶ static 메서드에서 instance 직접 사용 불가!&lt;/h3&gt;
&lt;h6 id=&quot;-iv--cv-사용-가능-1&quot;&gt;▷ iv → cv 사용 가능&lt;/h6&gt;
&lt;h6 id=&quot;-iv--cv-사용-불가-1&quot;&gt;▷ iv ← cv 사용 불가&lt;/h6&gt;
&lt;h6 id=&quot;-같은-원리로-static에서-instance-직접-사용-불가&quot;&gt;▷ 같은 원리로 static에서 instance 직접 사용 불가!&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InstanceInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StaticInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;staticMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InstanceInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ERROR! static 메서드 안에서 instance 직접 접근 불가&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StaticInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;instanceMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InstanceInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StaticInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// instance 메서드에서는 static 사용 가능&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ERROR! 지역 내부 클래스는 메서드 안에서만&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LocalInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 4&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch7---48-내부-클래스의-제어자와-접근성-예제3-1&quot;&gt;Ch7 - 48. 내부 클래스의 제어자와 접근성 예제3&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-내부-클래스-private-사용-가능&quot;&gt;▶ 내부 클래스 private 사용 가능!&lt;/h3&gt;
&lt;h6 id=&quot;-private--같은-클래스만-사용가능&quot;&gt;▷ private : 같은 클래스만 사용가능&lt;/h6&gt;
&lt;h6 id=&quot;-내부-클래스--같은-클래스-안에-있는-다른-클래스&quot;&gt;▷ 내부 클래스 : 같은 클래스 안에 있는 다른 클래스&lt;/h6&gt;
&lt;h6 id=&quot;-내부-클래스도-같은-클래스&quot;&gt;▷ 내부 클래스도 같은 클래스&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerIv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerCv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerIv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 외부 클래스의 private 사용 가능&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerCv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;siv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerIv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ERROR! static → 인스턴스 멤버 접근 불가&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerCv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;-지역-내부-클래스에서는-변수-사용-불가-상수만-접근-가능&quot;&gt;▶ 지역 내부 클래스에서는 변수 사용 불가, 상수만 접근 가능&lt;/h3&gt;
&lt;h6 id=&quot;-상수--final-int&quot;&gt;▷ 상수 : final int&lt;/h6&gt;
&lt;h6 id=&quot;-jdk18-부터는-final-생략가능&quot;&gt;▷ JDK1.8 부터는 final 생략가능&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// final int lv = 0;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;겉보기에 똑같음&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;어떻게 구분?&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;값이 바뀌지 않으면 상수로 간주&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;-상수만-접근-가능한-이유는-상수는-constant-pool이란-곳에서-따로-관리&quot;&gt;▷ 상수만 접근 가능한 이유는 상수는 constant pool이란 곳에서 따로 관리&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;method는 자기 할 거 다 하면 없어짐&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;근데 상수는 constant pool가면 있음&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerIv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outerCv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 원래는 ERROR! 외부 클래스 지역변수는 상수만 접근 가능, JDK1.8부터는 에러 아님&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;method보다 method 안에 있는 내부 클래스의 객체가 더 오래 살 수도 있음&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;method는 자기 할 거 다하면 없어져서&lt;br /&gt;
&lt;br /&gt;&lt;a id=&quot;Verse 5&quot;&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch7---49-내부-클래스의-제어자와-접근성-예제4-1&quot;&gt;Ch7 - 49. 내부 클래스의 제어자와 접근성 예제4&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-인스턴스-사용하려면-외부-클래스-인스턴스-먼저-생성&quot;&gt;▶ 인스턴스 사용하려면, 외부 클래스 인스턴스 먼저 생성!&lt;/h3&gt;
&lt;h6 id=&quot;-인스턴스-사용하려면-외부-클래스-인스턴스-생성--내부-클래스-인스턴스-생성&quot;&gt;▷ 인스턴스 사용하려면? 외부 클래스 인스턴스 생성 → 내부 클래스 인스턴스 생성&lt;/h6&gt;
&lt;h6 id=&quot;-static은-외부-클래스-인스턴스-생성-안해도-됨-바로-내부-클래스-인스턴스-생성&quot;&gt;▷ static은? &lt;del&gt;외부 클래스 인스턴스 생성&lt;/del&gt; 안해도 됨, 바로 내부 클래스 인스턴스 생성&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;단, 생성 시 &lt;code class=&quot;highlighter-rouge&quot;&gt;외부 클래스 이름.내부 클래스 이름 = new 외부 클래스 이름.내부 클래스 이름&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 외부 클래스의 인스턴스 먼저 생성&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InstanceInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 인스턴스 클래스의 인스턴스 생성 가능&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;StaticInner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// static 내부 클래스는 외부 클래스 인스턴스를 먼저 생성 안해도 됨&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 6&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;ch7---50-내부-클래스의-제어자와-접근성-예제5-1&quot;&gt;Ch7 - 50. 내부 클래스의 제어자와 접근성 예제5&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-변수의-위치-파악&quot;&gt;▶ 변수의 위치 파악&lt;/h3&gt;
&lt;h6 id=&quot;-외부-클래스의-iv&quot;&gt;▷ 외부 클래스의 iv&lt;/h6&gt;
&lt;h6 id=&quot;-내부-클래스의-iv&quot;&gt;▷ 내부 클래스의 iv&lt;/h6&gt;
&lt;h6 id=&quot;-lv&quot;&gt;▷ lv&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 외부 클래스의 iv&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Inner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 내부 클래스의 iv&lt;/span&gt;

		&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// lv&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 가장 가까운 value&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;this.value : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 내부 클래스의 iv&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Outer.this.value : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 외부 클래스의 iv&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 외부 클래스의 인스턴스 먼저 생성&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Inner&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 인스턴스 클래스의 인스턴스 생성 가능&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;inner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// console&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Outer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry><entry><title type="html">Ch7-42~44. 내부 클래스</title><link href="https://100jran.github.io/7cornerstoneJava22" rel="alternate" type="text/html" title="Ch7-42~44. 내부 클래스" /><published>2021-06-15T09:00:21+09:00</published><updated>2021-06-15T09:00:21+09:00</updated><id>https://100jran.github.io/7cornerstoneJava22</id><content type="html" xml:base="https://100jran.github.io/7cornerstoneJava22">&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLW2UjW795-f6xWA2_MUhEVgPauhGl3xIp&quot;&gt;자바의 정석 기초편&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-목차&quot;&gt;0. 목차&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;h2 id=&quot;chapter7-객체지향-프로그래밍ⅱ&quot;&gt;&lt;span style=&quot;color:orangered&quot;&gt;Chapter7. 객체지향 프로그래밍Ⅱ&lt;/span&gt;&lt;br /&gt;&lt;/h2&gt;
  &lt;h4 id=&quot;ch7---42-내부-클래스&quot;&gt;Ch7 - 42. &lt;a href=&quot;#Verse 1&quot;&gt;내부 클래스&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---43-내부-클래스의-종류와-특징&quot;&gt;Ch7 - 43. &lt;a href=&quot;#Verse 2&quot;&gt;내부 클래스의 종류와 특징&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
  &lt;h4 id=&quot;ch7---44-내부-클래스의-선언&quot;&gt;Ch7 - 44. &lt;a href=&quot;#Verse 3&quot;&gt;내부 클래스의 선언&lt;/a&gt;&lt;br /&gt;&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 1&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch7---42-내부-클래스-1&quot;&gt;Ch7 - 42. 내부 클래스&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-내부-클래스란&quot;&gt;▶ 내부 클래스란?&lt;/h3&gt;
&lt;h6 id=&quot;-클래스-안의-클래스&quot;&gt;▷ 클래스 안의 클래스&lt;/h6&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;일반적 클래스&lt;/strong&gt;&lt;br /&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;내부 클래스&lt;/strong&gt;&lt;br /&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// B의 외부 클래스&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A의 내부 클래스&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-내부-클래스의-장점&quot;&gt;▶ 내부 클래스의 장점&lt;/h3&gt;
&lt;h6 id=&quot;-내부-클래스에서-외부-클래스의-멤버들을-쉽게-접근-가능&quot;&gt;▷ 내부 클래스에서 외부 클래스의 멤버들을 쉽게 접근 가능&lt;/h6&gt;
&lt;h6 id=&quot;-코드의-복잡성을-감소-시킴캡슐화&quot;&gt;▷ 코드의 복잡성을 감소 시킴(캡슐화)&lt;/h6&gt;
&lt;p&gt;&lt;img src=&quot;assets/built/postsImages/TheCornerstoneOfJava/2021-06-15-7cornerstoneJava22/img.png&quot; width=&quot;100%&quot; align=&quot;left&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-실습&quot;&gt;▶ 실습&lt;/h3&gt;
&lt;h6 id=&quot;-일반적-클래스-b에서-a의-멤버-i를-사용&quot;&gt;▷ 일반적 클래스 B에서 A의 멤버 i를 사용&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h6 id=&quot;-내부-클래스-b에서-a의-멤버-i를-사용&quot;&gt;▷ 내부 클래스 B에서 A의 멤버 i를 사용&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// A a = new A(); 객체 생성 필요X&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 2&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch7---43-내부-클래스의-종류와-특징-1&quot;&gt;Ch7 - 43. 내부 클래스의 종류와 특징&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-변수의-종류&quot;&gt;▶ 변수의 종류&lt;/h3&gt;
&lt;h6 id=&quot;-iv&quot;&gt;▷ iv&lt;/h6&gt;
&lt;h6 id=&quot;-cv&quot;&gt;▷ cv&lt;/h6&gt;
&lt;h6 id=&quot;-lv&quot;&gt;▷ lv&lt;/h6&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;-내부-클래스의-종류&quot;&gt;▶ 내부 클래스의 종류&lt;/h3&gt;
&lt;h6 id=&quot;-인스턴스-내부-클래스--iv&quot;&gt;▷ 인스턴스 내부 클래스 ≒ iv&lt;/h6&gt;
&lt;h6 id=&quot;-스태틱-내부-클래스--cv&quot;&gt;▷ 스태틱 내부 클래스 ≒ cv&lt;/h6&gt;
&lt;h6 id=&quot;-지역-클래스--lv&quot;&gt;▷ 지역 클래스 ≒ lv&lt;/h6&gt;
&lt;h6 id=&quot;-익명-클래스--클래스의-선언과-객체의-생성을-동시에-하는-이름-없는-클래스일회용&quot;&gt;▷ 익명 클래스 : 클래스의 선언과 객체의 생성을 동시에 하는 이름 없는 클래스(일회용)&lt;/h6&gt;

&lt;p&gt;&lt;br /&gt;&lt;a id=&quot;Verse 3&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;ch7---44-내부-클래스의-선언-1&quot;&gt;Ch7 - 44. 내부 클래스의 선언&lt;/h1&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;-인스턴스-내부-클래스&quot;&gt;▶ 인스턴스 내부 클래스&lt;/h3&gt;
&lt;h6 id=&quot;--iv&quot;&gt;▷ ≒ iv&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;InstanceInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;-스태틱-내부-클래스&quot;&gt;▶ 스태틱 내부 클래스&lt;/h3&gt;
&lt;h6 id=&quot;--cvstatic--iv&quot;&gt;▷ ≒ cv(static + iv)&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StaticInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;-지역-내부-클래스&quot;&gt;▶ 지역 내부 클래스&lt;/h3&gt;
&lt;h6 id=&quot;--lv&quot;&gt;▷ ≒ lv&lt;/h6&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Outer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LocalInner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>JungRan-Baek</name></author><category term="javajungsuk" /><summary type="html">자바의 정석 기초편</summary></entry></feed>